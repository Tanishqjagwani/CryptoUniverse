{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Loader.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","App.jsx","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","console","log","span","title","value","millify","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","cryptoNewsHeader","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Option","Select","demoImage","News","setNewsCategory","cryptoNews","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","i","xs","sm","lg","hoverable","href","target","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","Loader","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","rank","iconUrl","volume","numberOfMarkets","marketShare","id","HTMLReactParser","LineChart","coinHistory","coinName","currentPrice","coinPrice","coinTimeStamp","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","e","currency","extra","App","exact","path","color","textAlign","configureStore","reducer","ReactDom","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.182c55bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nfunction Navbar() {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">CryptoVerse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Homepage</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"bb6c07dc8fmsh7465d44dffc145dp173271jsn6bec94d5e9dd\",\n};\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\nconst createRequest = (url) => ({\n  url,\n  headers: cryptoApiHeaders,\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) =>\n        createRequest(`/coin/${coinId}/history/${timeperiod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n// var options = {\n//   method: 'GET',\n//   url: 'https://coinranking1.p.rapidapi.com/stats',\n//   headers: {\n//     'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n//     'x-rapidapi-key': 'bb6c07dc8fmsh7465d44dffc145dp173271jsn6bec94d5e9dd'\n//   }\n// };\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.coinranking.com/v2/coin/Qwsogvtv82FCd',\n//   headers: {\n//     'x-access-token': 'your-api-key'\n//   }\n// };\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\nconst { Title } = Typography;\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../components\";\n\nfunction Homepage() {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  console.log(data);\n  if (isFetching) return \"Loading..\";\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats{\" \"}\n        <Row>\n          {\" \"}\n          <Col span={12}>\n            <Statistic\n              title=\"Total Cryptocurrencies\"\n              value={millify(globalStats.total)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total Exchanges\"\n              value={millify(globalStats.totalExchanges)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total Market Cap\"\n              value={millify(globalStats.totalMarketCap)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total 24hr volume \"\n              value={millify(globalStats.total24hVolume)}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total Markets\"\n              value={millify(globalStats.totalMarkets)}\n            />\n          </Col>\n        </Row>\n      </Title>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world{\" \"}\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest CryptoNews{\" \"}\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n\nexport default Homepage;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeader = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"bb6c07dc8fmsh7465d44dffc145dp173271jsn6bec94d5e9dd\",\n};\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\nconst createRequest = (url) => ({\n  url,\n  headers: cryptoNewsHeader,\n});\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from \"react\";\nimport { Typography, Row, Col, Avatar, Select, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nfunction News({ simplified }) {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data } = useGetCryptosQuery(100);\n\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n\n  if (!cryptoNews?.value) return \"Loading\";\n  console.log(cryptoNews);\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((coin) => (\n              <Option value={coin.name}>{coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news?.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=\"news\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>{\" \"}\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default News;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, coinName, currentPrice }) => {\n  const coinPrice = [];\n  const coinTimeStamp = [];\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimeStamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n  const data = {\n    labels: coinTimeStamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName}Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title className=\"price-change\" level={5}>\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title className=\"current-price\" level={5}>\n            Current {coinName} Price:${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Typography, Col, Row, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport LineChart from \"./LineChart\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nfunction CryptoDetails() {\n  const { coinId } = useParams();\n  const [timeperiod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timeperiod,\n  });\n\n  const cryptoDetails = data?.data?.coin;\n  console.log(data);\n  if (isFetching) return \"Loading...\";\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name}({cryptoDetails.slug}) Price{\" \"}\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US dollars. View value statistics,\n          market cap and supply\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container \">\n        <Col className=\"coin-value-statistics \">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-detailes-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p> An overview showing the stats of{cryptoDetails.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info \">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-detailes-heading\">\n              Other Statistics\n            </Title>\n            <p> An overview showing the stats of all cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-detils-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n\n          {cryptoDetails.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>{\" \"}\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n\nexport default CryptoDetails;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nfunction Cryptocurrencies({ simplified }) {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  console.log(cryptos);\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]); //this function is excute whenvever the value is changes\n  if (isFetching) return \"Loading..\";\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <input\n            placeholder=\"Search Crypto\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\">\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price:{millify(currency.price)}</p>\n                <p>Market Cap:{millify(currency.marketCap)}</p>\n                <p>Daily Change:{millify(currency.change)} %</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Navbar,\n  Exchanges,\n  News,\n  Cryptocurrencies,\n  CryptoDetails,\n  Homepage,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            CryptoVerse\n            <br />\n            All Right Reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nReactDom.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}